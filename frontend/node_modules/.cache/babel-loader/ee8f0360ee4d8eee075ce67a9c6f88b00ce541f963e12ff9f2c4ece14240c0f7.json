{"ast":null,"code":"var _jsxFileName = \"/Users/sunaz/Desktop/12-adv-starting-project/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  //we can not use react hooks in loaders\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    //setError(\"Fetching events failed.\");\n    return {\n      isError: true,\n      message: 'Could not fetch events.'\n    };\n  } else {\n    const resData = await response.json();\n    return resData.events;\n    //return resposne;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","isError","message","resData","json","$RefreshReg$"],"sources":["/Users/sunaz/Desktop/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData } from 'react-router-dom'; \n\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n  const events = useLoaderData();\n  \n   return (\n    <>\n    <EventsList \n    events={events} \n    />\n    </>\n  );\n}\n\nexport default EventsPage;\nexport async function loader(){\n    //we can not use react hooks in loaders\n    const response = await fetch(\"http://localhost:8080/events\");\n\n    if (!response.ok) {\n      //setError(\"Fetching events failed.\");\n      return {isError: true, message: 'Could not fetch events.'};\n    } else {\n      const resData = await response.json();\n      return resData.events;\n      //return resposne;\n}\n}"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGR,aAAa,CAAC,CAAC;EAE7B,oBACCG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACAN,OAAA,CAACF,UAAU;MACXO,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC,gBACA,CAAC;AAEP;AAACN,EAAA,CAVQD,UAAU;EAAA,QACFN,aAAa;AAAA;AAAAc,EAAA,GADrBR,UAAU;AAYnB,eAAeA,UAAU;AACzB,OAAO,eAAeS,MAAMA,CAAA,EAAE;EAC1B;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA,OAAO;MAACC,OAAO,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAyB,CAAC;EAC5D,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACb,MAAM;IACrB;EACN;AACA;AAAC,IAAAM,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}